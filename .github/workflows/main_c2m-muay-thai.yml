# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - c2m-web

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv antenv
          source antenv/bin/activate

      - name: Install dependencies
        run: |
          source antenv/bin/activate
          pip install -r requirements.txt

      - name: Collect static files
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          DATABASES_ENGINE: ${{ secrets.DATABASES_ENGINE }}
          DATABASES_NAME: ${{ secrets.DATABASES_NAME }}
          DATABASES_USER: ${{ secrets.DATABASES_USER }}
          DATABASES_PASSWORD: ${{ secrets.DATABASES_PASSWORD }}
          DATABASES_HOST: ${{ secrets.DATABASES_HOST }}
          DATABASES_PORT: ${{ secrets.DATABASES_PORT }}
          STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          SITE_URL: ${{ secrets.SITE_URL }}
          CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
          CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
          AZURE_CONNECTION_STRING: ${{ secrets.AZURE_CONNECTION_STRING }}
          AZURE_ACCOUNT_NAME: ${{ secrets.AZURE_ACCOUNT_NAME }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          AZURE_MEDIA_CONTAINER: ${{ secrets.AZURE_MEDIA_CONTAINER }}
          AZURE_STATIC_CONTAINER: ${{ secrets.AZURE_STATIC_CONTAINER }}
        run: |
          source antenv/bin/activate
          python manage.py collectstatic --noinput

      - name: Install Stripe CLI
        run: |
          sudo dpkg -i stripe_1.21.0_linux_amd64.deb
          sudo apt-get install -f

      - name: Validate Stripe CLI Installation
        run: |
          stripe --version

      - name: Zip artifact for deployment
        run: |
          zip -r release.zip * .[^.]* -x "antenv/*" "*.pyc" "*.pyo" "*__pycache__*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: List contents of ZIP file
        run: unzip -l release.zip

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_9D89A2AD03894D7CB641260453F6B3C3 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7F1B8EF96E6948AE810A93561D0424D4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_BEEEE20DE6E54C4DB144F4219D4BB10E }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'c2m-muay-thai'
          slot-name: 'Production'
          
